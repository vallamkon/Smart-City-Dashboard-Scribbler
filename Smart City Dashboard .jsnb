{
  "metadata": {
    "name": "<span style=\"font-weight: bolder; color: rgb(34, 34, 34); font-family: Inter, sans-serif; font-size: 18px; background-color: rgb(255, 255, 255);\">Smart City Dashboard</span>",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "(async () => {\n  // Create basic layout elements\n  const body = document.body;\n  body.style.fontFamily = 'Arial, sans-serif';\n  body.style.margin = '20px';\n  body.style.background = '#f4f4f4';\n  const heading = document.createElement('h1');\n  heading.textContent = 'Smart City Dashboard';\n  heading.style.color = '#333';\n  body.appendChild(heading);\n\n  const cityInput = document.createElement('input');\n  cityInput.placeholder = 'Enter city name (default: Goa)';\n  cityInput.style.marginRight = '10px';\n  body.appendChild(cityInput);\n\n  const loadDataBtn = document.createElement('button');\n  loadDataBtn.textContent = 'Load Data';\n  loadDataBtn.style.background = '#007BFF';\n  loadDataBtn.style.color = 'white';\n  loadDataBtn.style.padding = '5px 10px';\n  loadDataBtn.style.border = 'none';\n  loadDataBtn.style.cursor = 'pointer';\n  body.appendChild(loadDataBtn);\n\n  const darkModeBtn = document.createElement('button');\n  darkModeBtn.textContent = 'Toggle Dark Mode';\n  darkModeBtn.style.marginLeft = '10px';\n  body.appendChild(darkModeBtn);\n\n  const dashboard = document.createElement('div');\n  dashboard.style.marginTop = '20px';\n  body.appendChild(dashboard);\n\n  const weatherReview = document.createElement('p');\n  dashboard.appendChild(weatherReview);\n\n  const airQualityReview = document.createElement('p');\n  dashboard.appendChild(airQualityReview);\n\n  const trafficReview = document.createElement('p');\n  dashboard.appendChild(trafficReview);\n\n  const chartDiv = document.createElement('div');\n  chartDiv.id = 'weatherChart';\n  chartDiv.style.width = '100%';\n  chartDiv.style.height = '500px';\n  dashboard.appendChild(chartDiv);\n\n  // Dark mode toggle\n  darkModeBtn.onclick = () => {\n    document.body.style.background =\n      document.body.style.background === 'black' ? '#f4f4f4' : 'black';\n    document.body.style.color =\n      document.body.style.color === 'white' ? '#333' : 'white';\n  };\n\n  // Function to load and display data\n  loadDataBtn.onclick = async () => {\n    const city = cityInput.value.trim() || 'Goa';\n    heading.textContent = `Smart City Dashboard - ${city}`;\n    dashboard.style.display = 'block';\n    weatherReview.textContent = airQualityReview.textContent = trafficReview.textContent = 'Loading...';\n\n    try {\n      const apiKey = 'b7196897eba048f127b2d38a84edb681';\n      const weatherUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;\n      const weatherResponse = await fetch(weatherUrl);\n      if (!weatherResponse.ok) throw new Error('City not found in weather data');\n\n      const weatherData = await weatherResponse.json();\n      const dates = weatherData.list.map(item => item.dt_txt);\n      const temps = weatherData.list.map(item => item.main.temp);\n\n      // Use Plotly.js\n      if (typeof Plotly === 'undefined') {\n        const script = document.createElement('script');\n        script.src = 'https://cdn.plot.ly/plotly-latest.min.js';\n        document.head.appendChild(script);\n        await new Promise(resolve => script.onload = resolve);\n      }\n\n      Plotly.newPlot('weatherChart', [{\n        x: dates,\n        y: temps,\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: { color: 'orange' },\n        name: 'Temperature (°C)'\n      }], {\n        title: `5-Day Temperature Forecast for ${city}`,\n        xaxis: { title: 'Date' },\n        yaxis: { title: 'Temperature (°C)' }\n      });\n\n      const avgTemp = (temps.reduce((a, b) => a + b, 0) / temps.length).toFixed(1);\n      weatherReview.textContent = `Weather: Average temperature is ${avgTemp}°C, mostly ${avgTemp > 30 ? 'hot' : avgTemp > 20 ? 'warm' : 'cool'}.`;\n\n      const { coord } = weatherData.city;\n      const airQualityUrl = `https://api.openweathermap.org/data/2.5/air_pollution?lat=${coord.lat}&lon=${coord.lon}&appid=${apiKey}`;\n      const airResponse = await fetch(airQualityUrl);\n      if (!airResponse.ok) throw new Error('Air quality data not found');\n      const airData = await airResponse.json();\n      const aqi = airData.list[0].main.aqi;\n      const airQualityLevels = ['Good', 'Fair', 'Moderate', 'Poor', 'Very Poor'];\n      airQualityReview.textContent = `Air Quality: ${airQualityLevels[aqi - 1]}`;\n\n      const traffic =\n        city.toLowerCase() === 'delhi' ? 'Heavy' :\n        city.toLowerCase() === 'mumbai' ? 'Busy' : 'Smooth';\n      trafficReview.textContent = `Traffic: ${traffic}`;\n    } catch (err) {\n      alert(err.message);\n      console.error(err);\n      weatherReview.textContent = 'Error loading data.';\n      airQualityReview.textContent = '';\n      trafficReview.textContent = '';\n    }\n  };\n})();\n",
      "status": "[1]<br><span style=\"font-size:8px\">3ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/scribbler",
  "run_on_load": false
}